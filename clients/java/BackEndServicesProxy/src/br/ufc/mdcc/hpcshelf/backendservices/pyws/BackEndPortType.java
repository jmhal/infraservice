
package br.ufc.mdcc.hpcshelf.backendservices.pyws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BackEndPortType", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BackEndPortType {


    /**
     * 
     *     The deploy will take time, even in a public cloud. This method returns the
     *     state of the deployment.
     *     Input: The ID of the platform.
     *     Output: Status. This can be BUILDING, FAILED or NULL.
     *     
     * 
     * @param platformId
     * @return
     *     returns java.lang.String
     * @throws Error_Exception
     */
    @WebMethod(operationName = "platform_deployment_status", action = "http://www.mdcc.ufc.br/hpcshelf/backend/platform_deployment_status")
    @WebResult(name = "result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
    @RequestWrapper(localName = "platform_deployment_status", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.PlatformDeploymentStatus")
    @ResponseWrapper(localName = "platform_deployment_status_result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.PlatformDeploymentStatusResult")
    public String platformDeploymentStatus(
        @WebParam(name = "platform_id", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
        String platformId)
        throws Error_Exception
    ;

    /**
     * 
     *     Just destroy the platform.
     *     Input: The ID of the platform.
     *     Output: SUCCESS or NULL if nonexistent platform.
     *     
     * 
     * @param platformId
     * @return
     *     returns java.lang.String
     * @throws Error_Exception
     */
    @WebMethod(operationName = "destroy_platform", action = "http://www.mdcc.ufc.br/hpcshelf/backend/destroy_platform")
    @WebResult(name = "result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
    @RequestWrapper(localName = "destroy_platform", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.DestroyPlatform")
    @ResponseWrapper(localName = "destroy_platform_result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.DestroyPlatformResult")
    public String destroyPlatform(
        @WebParam(name = "platform_id", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
        String platformId)
        throws Error_Exception
    ;

    /**
     * 
     *     Returns the available profiles for this backend.
     *     Input: no need for input
     *     Output: a dictionary with the profiles.
     *     
     * 
     * @return
     *     returns br.ufc.mdcc.hpcshelf.backendservices.pywsclient.ProfilesIdsList
     * @throws Error_Exception
     */
    @WebMethod(operationName = "available_profiles", action = "http://www.mdcc.ufc.br/hpcshelf/backend/available_profiles")
    @WebResult(name = "result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
    @RequestWrapper(localName = "available_profiles", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.AvailableProfiles")
    @ResponseWrapper(localName = "available_profiles_result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.AvailableProfilesResult")
    public ProfilesIdsList availableProfiles()
        throws Error_Exception
    ;

    /**
     * 
     *     It receives a string containing the contract. This contract is in XML format.
     *     It will extract the profile ID from the contract and will create the corresponding
     *     platform.
     *     Input: An XML string representing the contract
     *     Output: An ID for the platform to be created. If it can't be created, the value
     *     will be 0.
     *     
     * 
     * @param contract
     * @return
     *     returns java.lang.String
     * @throws Error_Exception
     */
    @WebMethod(operationName = "deploy_contract", action = "http://www.mdcc.ufc.br/hpcshelf/backend/deploy_contract")
    @WebResult(name = "result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
    @RequestWrapper(localName = "deploy_contract", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.DeployContract")
    @ResponseWrapper(localName = "deploy_contract_result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.DeployContractResult")
    public String deployContract(
        @WebParam(name = "contract", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
        String contract)
        throws Error_Exception
    ;

    /**
     * 
     *     Lists the platforms currently instantiated.
     *     Input: there is no need for input.
     *     Output: A list of platform id's.
     *     
     * 
     * @return
     *     returns br.ufc.mdcc.hpcshelf.backendservices.pywsclient.PlatformsList
     * @throws Error_Exception
     */
    @WebMethod(operationName = "available_platforms", action = "http://www.mdcc.ufc.br/hpcshelf/backend/available_platforms")
    @WebResult(name = "result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
    @RequestWrapper(localName = "available_platforms", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.AvailablePlatforms")
    @ResponseWrapper(localName = "available_platforms_result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.AvailablePlatformsResult")
    public PlatformsList availablePlatforms()
        throws Error_Exception
    ;

    /**
     * 
     * @param remoteIp
     * @param profileId
     * @param coreSessionId
     * @return
     *     returns java.lang.String
     * @throws Error_Exception
     */
    @WebMethod(operationName = "deploy_contract_callback", action = "http://www.mdcc.ufc.br/hpcshelf/backend/deploy_contract_callback")
    @WebResult(name = "result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
    @RequestWrapper(localName = "deploy_contract_callback", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.DeployContractCallback")
    @ResponseWrapper(localName = "deploy_contract_callback_result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.DeployContractCallbackResult")
    public String deployContractCallback(
        @WebParam(name = "profile_id", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
        String profileId,
        @WebParam(name = "core_session_id", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
        String coreSessionId,
        @WebParam(name = "remote_ip", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
        String remoteIp)
        throws Error_Exception
    ;

    /**
     * 
     *     After the deployment is completed, the endpoints to the platform are made
     *     available.
     *     Input: The ID of the platform.
     *     Output: A string with the endpoint or NULL if nonexistent platform.
     *     
     * 
     * @param platformId
     * @return
     *     returns java.lang.String
     * @throws Error_Exception
     */
    @WebMethod(operationName = "get_platform_endpoint", action = "http://www.mdcc.ufc.br/hpcshelf/backend/get_platform_endpoint")
    @WebResult(name = "result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
    @RequestWrapper(localName = "get_platform_endpoint", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.GetPlatformEndpoint")
    @ResponseWrapper(localName = "get_platform_endpoint_result", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/", className = "br.ufc.mdcc.hpcshelf.backendservices.pywsclient.GetPlatformEndpointResult")
    public String getPlatformEndpoint(
        @WebParam(name = "platform_id", targetNamespace = "http://www.mdcc.ufc.br/hpcshelf/backend/types/")
        String platformId)
        throws Error_Exception
    ;

}
