
package com.example;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.example.types.ObjectFactory;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TestPortType", targetNamespace = "http://example.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TestPortType {


    /**
     * 
     * @param a
     * @param b
     * @param c
     * @return
     *     returns java.lang.String
     * @throws Error
     */
    @WebMethod(operationName = "add_triple", action = "http://example.com/add_triple")
    @WebResult(name = "result", targetNamespace = "http://example.com/types/")
    @RequestWrapper(localName = "add_triple", targetNamespace = "http://example.com/types/", className = "com.example.types.AddTriple")
    @ResponseWrapper(localName = "add_triple_result", targetNamespace = "http://example.com/types/", className = "com.example.types.AddTripleResult")
    public String addTriple(
        @WebParam(name = "a", targetNamespace = "http://example.com/types/")
        String a,
        @WebParam(name = "b", targetNamespace = "http://example.com/types/")
        String b,
        @WebParam(name = "c", targetNamespace = "http://example.com/types/")
        String c)
        throws Error
    ;

}
