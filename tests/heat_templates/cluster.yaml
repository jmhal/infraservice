heat_template_version: 2013-05-23

description: Simple template to deploy a small cluster from scratch 

parameters:

  image:
    type: string
    label: Image name or ID
    description: Image to be used for cluster instance
    default: cirros-0.3.3-x86_64
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used
    default: m1.small
  key:
    type: string
    label: Key name
    description: Name of key-pair to be used for compute instance
    default: my_key
  public_network:
    type: string
    label: Private network name or ID
    description: Network to attach instance to.
    default: private-net
  cluster_size:
    type: number
    label: Cluster size
    description: Number of compute node instances in cluster
    default: 1

resources:
  network:
    type: lib/private_network.yaml
    properties:
      public_network: { get_param: public_network }

  head_node:
    type: lib/head_node.yaml 
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key: { get_param: key }
      cluster_size: { get_param: cluster_size }
      private_network: { get_attr: [network, name] }

  floating_ip:
    type: lib/floating_ip.yaml
    properties:
      port: { get_attr: [head_node, head_node_instance_port] }
      public_network: { get_param: public_network }

  mpi_cluster: 
     type: OS::Heat::ResourceGroup
     properties:
        count: {get_param: cluster_size}
        resource_def:
           type: lib/compute_node.yaml
           properties:
              image: { get_param: image }
              flavor: { get_param: flavor }
              key: { get_param: key }
              private_network: { get_attr: [network, name] }
              head_node_name: { get_attr: [head_node, head_node_instance_name] }
              head_node_ip: { get_attr: [head_node, head_node_instance_ip] }
 
outputs:
  ip:
    description: The public IP address to access cluster.
    value: { get_attr: [floating_ip, ip] } 
